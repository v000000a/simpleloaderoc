-- coded_door.lua
-- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –∫–æ–¥–æ–≤—ã–π –∑–∞–º–æ–∫ –¥–ª—è –¥–≤–µ—Ä–∏

local component = require("component")
local computer = require("computer")
local event = require("event")
local term = require("term")
local serialization = require("serialization")

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
if not component.isAvailable("redstone") then
  print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç redstone")
  return
end

local gpu = component.gpu
local redstone = component.redstone

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
local config = {
  code = "1234",           -- –ö–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  doorSide = 0,            -- –°—Ç–æ—Ä–æ–Ω–∞ –¥–≤–µ—Ä–∏ (0-5)
  openTime = 5,            -- –í—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  maxAttempts = 3,         -- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
  lockoutTime = 30,        -- –í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ø–æ–ø—ã—Ç–æ–∫
  beepOnKeypress = true,   -- –ó–≤—É–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏—à
  showStars = true         -- –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∑–≤–µ–∑–¥–æ—á–∫–∏ –≤–º–µ—Å—Ç–æ —Ü–∏—Ñ—Ä
}

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local currentInput = ""
local failedAttempts = 0
local lockedUntil = 0
local doorOpen = false

-- –ù–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
local sideNames = {
  [0] = "–Ω–∏–∑", [1] = "–≤–µ—Ä—Ö", [2] = "—Å–µ–≤–µ—Ä", 
  [3] = "—é–≥", [4] = "–∑–∞–ø–∞–¥", [5] = "–≤–æ—Å—Ç–æ–∫"
}

-- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
local function loadConfig()
  if not component.isAvailable("filesystem") then
    print("‚ö†Ô∏è  –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    return
  end
  
  local success, fs = pcall(component.list, "filesystem")
  if success and fs then
    local addr = next(fs)
    if addr and component.proxy(addr).exists("/door_config.cfg") then
      local file = io.open("/door_config.cfg", "r")
      if file then
        local content = file:read("*a")
        file:close()
        local loaded = serialization.unserialize(content)
        if loaded then
          for k, v in pairs(loaded) do
            config[k] = v
          end
          print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        end
      end
    end
  end
end

-- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
local function saveConfig()
  if not component.isAvailable("filesystem") then
    return false
  end
  
  local file = io.open("/door_config.cfg", "w")
  if file then
    file:write(serialization.serialize(config))
    file:close()
    return true
  end
  return false
end

-- –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞
local function clearScreen()
  if gpu then
    local w, h = gpu.getResolution()
    gpu.setBackground(0x000000)
    gpu.fill(1, 1, w, h, " ")
    gpu.set(1, 1, "")
  else
    term.clear()
  end
end

-- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
local function displayInterface()
  clearScreen()
  
  local timeLeft = math.max(0, lockedUntil - computer.uptime())
  local isLocked = timeLeft > 0
  
  if gpu then
    local w, h = gpu.getResolution()
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    gpu.setBackground(0x2C3E50)
    gpu.fill(1, 1, w, 1, " ")
    gpu.setForeground(0xFFFFFF)
    gpu.set(math.floor(w/2)-6, 1, "üîí –ö–û–î–û–í–´–ô –ó–ê–ú–û–ö")
    
    -- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
    gpu.setBackground(0x1a1a1a)
    gpu.fill(1, 2, w, h-1, " ")
    
    -- –°—Ç–∞—Ç—É—Å
    local doorStatus = doorOpen and "–û–¢–ö–†–´–¢–ê" or "–ó–ê–ö–†–´–¢–ê"
    gpu.setForeground(doorOpen and 0x00FF00 or 0xFFFFFF)
    gpu.set(3, 3, "–î–≤–µ—Ä—å: " .. doorStatus)
    
    gpu.setForeground(0xFFFFFF)
    gpu.set(3, 4, "–ü–æ–ø—ã—Ç–∫–∏: " .. failedAttempts .. "/" .. config.maxAttempts)
    
    if isLocked then
      gpu.setForeground(0xFF0000)
      gpu.set(3, 5, "üîí –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–û: " .. math.ceil(timeLeft) .. "—Å")
    else
      gpu.setForeground(0x00FF00)
      gpu.set(3, 5, "‚úÖ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï")
    end
    
    -- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–≤–æ–¥–∞
    gpu.setForeground(0xFFFFFF)
    gpu.set(3, 7, "–í–≤–æ–¥: ")
    
    local displayText = ""
    if config.showStars then
      displayText = string.rep("‚Ä¢", #currentInput)
    else
      displayText = currentInput
    end
    
    gpu.setForeground(0xFFFF00)
    gpu.set(9, 7, displayText .. string.rep("_", 6 - #currentInput))
    
    -- –ü–æ–¥—Å–∫–∞–∑–∫–∏
    gpu.setForeground(0x888888)
    gpu.set(3, 9, "Enter - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥")
    gpu.set(3, 10, "C - –û—á–∏—Å—Ç–∏—Ç—å –≤–≤–æ–¥")
    gpu.set(3, 11, "* - –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    gpu.set(3, 12, "# - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –¥–≤–µ—Ä—å")
    
  else
    -- –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    print("=== –ö–û–î–û–í–´–ô –ó–ê–ú–û–ö ===")
    local doorStatus = doorOpen and "–û–¢–ö–†–´–¢–ê" or "–ó–ê–ö–†–´–¢–ê"
    print("–î–≤–µ—Ä—å: " .. doorStatus)
    print("–ü–æ–ø—ã—Ç–∫–∏: " .. failedAttempts .. "/" .. config.maxAttempts)
    
    if isLocked then
      print("üîí –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–û: " .. math.ceil(timeLeft) .. "—Å")
    else
      print("‚úÖ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï")
    end
    
    local displayText = config.showStars and string.rep("*", #currentInput) or currentInput
    print("–í–≤–æ–¥: " .. displayText .. string.rep("_", 6 - #currentInput))
    print("\nEnter - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å | C - –û—á–∏—Å—Ç–∏—Ç—å | * - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ | # - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å")
  end
end

-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–µ—Ä—å—é
local function setDoorState(open)
  if open then
    redstone.setOutput(config.doorSide, 15)  -- –°–∏–≥–Ω–∞–ª –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è
    doorOpen = true
    print("üö™ –î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞ –Ω–∞ " .. config.openTime .. " —Å–µ–∫—É–Ω–¥")
  else
    redstone.setOutput(config.doorSide, 0)   -- –°–∏–≥–Ω–∞–ª –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
    doorOpen = false
    print("üîí –î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞")
  end
end

-- –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–≤–µ—Ä–∏ –Ω–∞ –≤—Ä–µ–º—è
local function openDoorTemporarily()
  setDoorState(true)
  
  -- –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –∑–∞–∫—Ä—ã—Ç–∏—è
  computer.beep(800, 0.2)
  event.timer(config.openTime, function()
    setDoorState(false)
    computer.beep(600, 0.2)
  end)
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
local function checkCode()
  if currentInput == config.code then
    print("‚úÖ –ö–æ–¥ –≤–µ—Ä–Ω—ã–π!")
    failedAttempts = 0
    openDoorTemporarily()
    return true
  else
    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥!")
    failedAttempts = failedAttempts + 1
    
    if failedAttempts >= config.maxAttempts then
      lockedUntil = computer.uptime() + config.lockoutTime
      print("üö´ –°–∏—Å—Ç–µ–º–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ " .. config.lockoutTime .. " —Å–µ–∫—É–Ω–¥")
      computer.beep(300, 1)
    else
      computer.beep(400, 0.5)
    end
    
    return false
  end
end

-- –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
local function showSettings()
  clearScreen()
  
  if gpu then
    local w, h = gpu.getResolution()
    gpu.setBackground(0x2C3E50)
    gpu.fill(1, 1, w, 1, " ")
    gpu.setForeground(0xFFFFFF)
    gpu.set(math.floor(w/2)-4, 1, "‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò")
    
    gpu.setBackground(0x1a1a1a)
    gpu.fill(1, 2, w, h-1, " ")
    
    local beepStatus = config.beepOnKeypress and "–í–ö–õ" or "–í–´–ö–õ"
    local starsStatus = config.showStars and "–í–ö–õ" or "–í–´–ö–õ"
    
    gpu.setForeground(0xFFFFFF)
    gpu.set(3, 3, "1. –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–¥ (—Ç–µ–∫—É—â–∏–π: " .. config.code .. ")")
    gpu.set(3, 4, "2. –í—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è: " .. config.openTime .. "—Å")
    gpu.set(3, 5, "3. –ú–∞–∫—Å. –ø–æ–ø—ã—Ç–æ–∫: " .. config.maxAttempts)
    gpu.set(3, 6, "4. –í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: " .. config.lockoutTime .. "—Å")
    gpu.set(3, 7, "5. –°—Ç–æ—Ä–æ–Ω–∞ –¥–≤–µ—Ä–∏: " .. sideNames[config.doorSide] .. " (" .. config.doorSide .. ")")
    gpu.set(3, 8, "6. –ó–≤—É–∫ –∫–ª–∞–≤–∏—à: " .. beepStatus)
    gpu.set(3, 9, "7. –ó–≤–µ–∑–¥–æ—á–∫–∏: " .. starsStatus)
    gpu.set(3, 10, "0. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏")
    
  else
    local beepStatus = config.beepOnKeypress and "–í–ö–õ" or "–í–´–ö–õ"
    local starsStatus = config.showStars and "–í–ö–õ" or "–í–´–ö–õ"
    
    print("=== –ù–ê–°–¢–†–û–ô–ö–ò ===")
    print("1. –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–¥ (—Ç–µ–∫—É—â–∏–π: " .. config.code .. ")")
    print("2. –í—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è: " .. config.openTime .. "—Å")
    print("3. –ú–∞–∫—Å. –ø–æ–ø—ã—Ç–æ–∫: " .. config.maxAttempts)
    print("4. –í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: " .. config.lockoutTime .. "—Å")
    print("5. –°—Ç–æ—Ä–æ–Ω–∞ –¥–≤–µ—Ä–∏: " .. sideNames[config.doorSide] .. " (" .. config.doorSide .. ")")
    print("6. –ó–≤—É–∫ –∫–ª–∞–≤–∏—à: " .. beepStatus)
    print("7. –ó–≤–µ–∑–¥–æ—á–∫–∏: " .. starsStatus)
    print("0. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏")
  end
  
  print("\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ")
  local choice = io.read()
  
  if choice == "1" then
    print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã): ")
    local newCode = io.read()
    if newCode and #newCode >= 1 then
      config.code = newCode
      print("‚úÖ –ö–æ–¥ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: " .. newCode)
    else
      print("‚ùå –ö–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
    end
    
  elseif choice == "2" then
    print("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: ")
    local time = tonumber(io.read())
    if time and time > 0 then
      config.openTime = time
      print("‚úÖ –í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: " .. time .. "—Å")
    else
      print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è")
    end
    
  elseif choice == "3" then
    print("–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: ")
    local attempts = tonumber(io.read())
    if attempts and attempts > 0 then
      config.maxAttempts = attempts
      print("‚úÖ –ü–æ–ø—ã—Ç–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: " .. attempts)
    else
      print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ")
    end
    
  elseif choice == "4" then
    print("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: ")
    local lockTime = tonumber(io.read())
    if lockTime and lockTime > 0 then
      config.lockoutTime = lockTime
      print("‚úÖ –í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: " .. lockTime .. "—Å")
    else
      print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è")
    end
    
  elseif choice == "5" then
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:")
    for i = 0, 5 do
      print("  " .. i .. " - " .. sideNames[i])
    end
    print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä–æ–Ω—ã (0-5): ")
    local side = tonumber(io.read())
    if side and side >= 0 and side <= 5 then
      config.doorSide = side
      print("‚úÖ –°—Ç–æ—Ä–æ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: " .. sideNames[side] .. " (" .. side .. ")")
    else
      print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞")
    end
    
  elseif choice == "6" then
    config.beepOnKeypress = not config.beepOnKeypress
    local newStatus = config.beepOnKeypress and "–í–ö–õ" or "–í–´–ö–õ"
    print("‚úÖ –ó–≤—É–∫ –∫–ª–∞–≤–∏—à: " .. newStatus)
    
  elseif choice == "7" then
    config.showStars = not config.showStars
    local newStatus = config.showStars and "–í–ö–õ" or "–í–´–ö–õ"
    print("‚úÖ –ó–≤–µ–∑–¥–æ—á–∫–∏: " .. newStatus)
    
  elseif choice == "0" then
    if saveConfig() then
      print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    else
      print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    end
    return
  end
  
  -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é, –ø–æ–∫–∞ –Ω–µ –≤—ã–±–µ—Ä—É—Ç –≤—ã—Ö–æ–¥
  showSettings()
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
local function mainLoop()
  loadConfig()
  
  print("üö™ –ö–æ–¥–æ–≤—ã–π –∑–∞–º–æ–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
  print("–ö–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: " .. config.code)
  print("–°—Ç–æ—Ä–æ–Ω–∞ redstone: " .. sideNames[config.doorSide] .. " (" .. config.doorSide .. ")")
  print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ * –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
  
  while true do
    displayInterface()
    
    local e, _, keyCode, char = event.pull()
    
    if e == "key_down" then
      local timeLeft = math.max(0, lockedUntil - computer.uptime())
      local isLocked = timeLeft > 0
      
      if not isLocked then
        if keyCode == 13 then -- Enter
          if #currentInput > 0 then
            checkCode()
            currentInput = ""
          end
          
        elseif keyCode == 8 then -- Backspace
          if #currentInput > 0 then
            currentInput = currentInput:sub(1, -2)
            if config.beepOnKeypress then computer.beep(500, 0.1) end
          end
          
        elseif char == "c" or char == "C" or char == "—Å" or char == "–°" then
          currentInput = ""
          if config.beepOnKeypress then computer.beep(600, 0.1) end
          
        elseif char == "*" then
          showSettings()
          currentInput = ""
          
        elseif char == "#" then
          -- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–≤–µ—Ä–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
          setDoorState(not doorOpen)
          
        elseif char and tonumber(char) then
          -- –¶–∏—Ñ—Ä–æ–≤–∞—è –∫–ª–∞–≤–∏—à–∞
          if #currentInput < 10 then -- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –∫–æ–¥–∞
            currentInput = currentInput .. char
            if config.beepOnKeypress then computer.beep(800, 0.05) end
          else
            computer.beep(300, 0.2)
          end
        end
      else
        -- –°–∏—Å—Ç–µ–º–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞
        computer.beep(200, 0.3)
      end
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫–ª–∞ –ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
    if lockedUntil > 0 and computer.uptime() >= lockedUntil then
      lockedUntil = 0
      failedAttempts = 0
      print("üîì –°–∏—Å—Ç–µ–º–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
    end
  end
end

-- –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
local success, err = pcall(mainLoop)
if not success then
  print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " .. tostring(err))
  print("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É")
end
